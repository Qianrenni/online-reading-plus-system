"""create initial tables

Revision ID: efaa5e99513c
Revises: 
Create Date: 2025-09-21 23:15:47.652989

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'efaa5e99513c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('author', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cover', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('total_chapter', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_book_author'), 'book', ['author'], unique=False)
    op.create_index(op.f('ix_book_name'), 'book', ['name'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('avatar', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_index(op.f('ix_user_password'), 'user', ['password'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=False)
    op.create_table('book_chapter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('sort_order', sa.Float(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('index_book_sort_unique', 'book_chapter', ['book_id', 'sort_order'], unique=True)
    op.create_index(op.f('ix_book_chapter_book_id'), 'book_chapter', ['book_id'], unique=False)
    op.create_index(op.f('ix_book_chapter_sort_order'), 'book_chapter', ['sort_order'], unique=False)
    op.create_table('shelf',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_read_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('index_user_book_unique', 'shelf', ['user_id', 'book_id'], unique=True)
    op.create_index('index_user_last_read', 'shelf', ['user_id', 'last_read_at'], unique=False)
    op.create_index(op.f('ix_shelf_book_id'), 'shelf', ['book_id'], unique=False)
    op.create_index(op.f('ix_shelf_user_id'), 'shelf', ['user_id'], unique=False)
    op.create_table('user_reading_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('last_chapter_id', sa.Integer(), nullable=False),
    sa.Column('last_position', sa.Integer(), nullable=False),
    sa.Column('last_read_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['last_chapter_id'], ['book_chapter.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('index_user_book_unique', 'user_reading_progress', ['user_id', 'book_id'], unique=True)
    op.create_index(op.f('ix_user_reading_progress_book_id'), 'user_reading_progress', ['book_id'], unique=False)
    op.create_index(op.f('ix_user_reading_progress_last_chapter_id'), 'user_reading_progress', ['last_chapter_id'], unique=False)
    op.create_index(op.f('ix_user_reading_progress_user_id'), 'user_reading_progress', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_reading_progress_user_id'), table_name='user_reading_progress')
    op.drop_index(op.f('ix_user_reading_progress_last_chapter_id'), table_name='user_reading_progress')
    op.drop_index(op.f('ix_user_reading_progress_book_id'), table_name='user_reading_progress')
    op.drop_index('index_user_book_unique', table_name='user_reading_progress')
    op.drop_table('user_reading_progress')
    op.drop_index(op.f('ix_shelf_user_id'), table_name='shelf')
    op.drop_index(op.f('ix_shelf_book_id'), table_name='shelf')
    op.drop_index('index_user_last_read', table_name='shelf')
    op.drop_index('index_user_book_unique', table_name='shelf')
    op.drop_table('shelf')
    op.drop_index(op.f('ix_book_chapter_sort_order'), table_name='book_chapter')
    op.drop_index(op.f('ix_book_chapter_book_id'), table_name='book_chapter')
    op.drop_index('index_book_sort_unique', table_name='book_chapter')
    op.drop_table('book_chapter')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_password'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_book_name'), table_name='book')
    op.drop_index(op.f('ix_book_author'), table_name='book')
    op.drop_table('book')
    # ### end Alembic commands ###
